## WARNING ##
# This file is auotmaticly generated, any changes
# will be overwritten.

##################################################
################  COMMON ENTITIES  ###############
##################################################

###############  input_boolean:  #################
input_boolean:
  front_lock_notifications:
    name: front Lock Notifications
  front_dooraccess_notifications:
    name: front Door Notifications
  front_garageacess_notifications:
    name: front Garage Notifications
  front_reset_lock:
    name: front reset lock

###################  script:  ####################
script:
  front_reset_lock:
    sequence:
      - service: script.front_manual_notify
        data_template:
          title: "reset"
          message: "front"

  front_reset_codeslot:
    mode: parallel
    fields:
      code_slot:
        description: The code slot to reset
        example: 1
    variables:
      # Constant used later to loop through day specific entities
      days: ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']
    sequence:
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.enabled_front_{{ code_slot | string }}"
      - service: input_text.set_value
        data_template:
          entity_id: "input_text.front_name_{{ code_slot | string }}"
          value: ""
      - service: input_text.set_value
        data_template:
          entity_id: "input_text.front_pin_{{ code_slot | string }}"
          value: ""
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.notify_front_{{ code_slot | string }}"
      - service: input_number.set_value
        data_template:
          entity_id: "input_number.accesscount_front_{{ code_slot | string }}"
          value: "0"
      - service: input_datetime.set_datetime
        data_template:
          entity_id: "input_datetime.start_date_front_{{ code_slot | string }}"
          date: >-
            {{ now().strftime('%Y-%m-%d') }}
      - service: input_datetime.set_datetime
        data_template:
          entity_id: "input_datetime.end_date_front_{{ code_slot | string }}"
          date: >-
            {{ now().strftime('%Y-%m-%d') }} 
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.daterange_front_{{ code_slot | string }}"
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.accesslimit_front_{{ code_slot | string }}"
      - service: input_boolean.turn_off
        data_template:
          entity_id: "input_boolean.reset_codeslot_front_{{ code_slot | string }}"
      # Loop through each day of the week and reset the entities related to each one
      - repeat:
          count: 7
          sequence:
            - service: input_datetime.set_datetime
              data_template:
                entity_id: "input_datetime.{{ days[repeat.index - 1] }}_start_date_front_{{ code_slot | string }}"
                time: "{{ '00:00' | timestamp_custom('%H:%M') }}"
            - service: input_datetime.set_datetime
              data_template:
                entity_id: "input_datetime.{{ days[repeat.index - 1] }}_end_date_front_{{ code_slot | string }}"
                time: "{{ '00:00' | timestamp_custom('%H:%M') }}"
            - service: input_boolean.turn_on
              data_template:
                entity_id: "input_boolean.{{ days[repeat.index - 1] }}_front_{{ code_slot | string }}"
            - service: input_boolean.turn_on
              data_template:
                entity_id: "input_boolean.{{ days[repeat.index - 1] }}_inc_front_{{ code_slot | string }}"

  front_refreshnodeinfo:
    description:  'Send MQTT RefreshNodeInfo command'
    sequence:
      - service: system_log.write
        data_template:
          message: "front_TEMPLATENUM started noderefreshinfo: {{ now() }}"
          level: debug  
      - service: mqtt.publish
        data:
          topic: 'OpenZWave/1/command/refreshnodeinfo/'
          payload: >-
            {% set node_id = state_attr('lock.front','node_id') %}
            { "node": {{ node_id }} }
          retain: true
          
###################  automation:  ####################
automation:

  - alias: reset_codeslot_front
    trigger:
      entity_id: input_boolean.reset_codeslot_front_1,input_boolean.reset_codeslot_front_2,input_boolean.reset_codeslot_front_3,input_boolean.reset_codeslot_front_4,input_boolean.reset_codeslot_front_5,input_boolean.reset_codeslot_front_6,input_boolean.reset_codeslot_front_7,input_boolean.reset_codeslot_front_8,input_boolean.reset_codeslot_front_9,input_boolean.reset_codeslot_front_10
      platform: state
      to: 'on'
    action:
      - service: script.front_reset_codeslot
        data_template:
          code_slot: "{{ trigger.entity_id.split('_')[-1] }}"

  - alias: front Lock Notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: front
    condition:
      - condition: state
        entity_id: input_boolean.front_lock_notifications
        state: "on"
    action:
      - service: script.front_manual_notify
        data_template:
          title: front
          message: "{{ trigger.event.data.action_text }}"

  - alias: front User Notifications
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: front
    condition:
      - condition: template
        value_template: "{{ trigger.event.data.code_slot > 0 }}"
      - condition: template
        value_template: "{{ is_state('input_boolean.notify_front_' + trigger.event.data.code_slot | string, 'on') }}"
    action:
      - service: script.front_manual_notify
        data_template:
          title: front
          message: "{{ trigger.event.data.action_text }} ({{ trigger.event.data.code_slot_name }})"

  - alias: "front Door Open and Close"
    trigger:
      entity_id: binary_sensor.door_front_homekit
      platform: state
    condition:
      - condition: state
        entity_id: "input_boolean.front_dooraccess_notifications"
        state: "on"
      - condition: template
        value_template: "{{ trigger.from_state.state in ('on', 'off') and trigger.to_state.state in ('on', 'off') }}"
    action:
      - service: script.front_manual_notify
        data_template:
          title: front
          message: "{% if trigger.to_state.state == 'on' %}Door Opened{% else %}Door Closed{% endif %}"

  - alias: front Changed Code
    trigger:
      entity_id: input_text.front_pin_1,input_text.front_pin_2,input_text.front_pin_3,input_text.front_pin_4,input_text.front_pin_5,input_text.front_pin_6,input_text.front_pin_7,input_text.front_pin_8,input_text.front_pin_9,input_text.front_pin_10
      platform: state
    condition:
      - condition: template
        value_template: >-
          {{
            is_state('input_boolean.front_enabled_' + trigger.entity_id.split('_')[-1], 'on')
            and
            (trigger.from_state.state != trigger.to_state.state)
          }}
    action:
      - service: persistent_notification.create
        data_template:
          title: front LOCK MANAGER
          message: >-
            {{ 'You changed the PIN for front code slot ' + trigger.entity_id.split('_')[-1] + '. Please enable it in order to make it active.'}}
      - service: input_boolean.turn_off
        data_template:
          entity_id: >-
            {{ 'input_boolean.enabled_front_' + trigger.entity_id.split('_')[-1] }}

  - alias: front Reset
    trigger:
      entity_id: input_boolean.front_reset_lock
      platform: state
      from: "off"
      to: "on"
    action:
      - service: script.front_reset_lock
      - service: input_boolean.turn_off
        entity_id: input_boolean.front_reset_lock

  - alias: front Decrement Access Count
    trigger:
      platform: event
      event_type: keymaster_lock_state_changed
      event_data:
        lockname: front
    condition:
      - condition: template
        # make sure decrementing access entries is enabled 
        value_template: "{{ is_state('input_boolean.accesslimit_front_' + trigger.event.data.code_slot | string, 'on') }}"
      - condition: template
        # Check for Keypad Unlock code
        value_template: >-
          {{
            trigger.event.data.code_slot > 0
            and
            (trigger.event.data.action_code is undefined or trigger.event.data.action_code in (6, 19))
          }}
    action:
      - service: input_number.decrement
        data_template:
          entity_id: "{{ 'input_number.accesscount_front_' + trigger.event.data.code_slot | string }}"
